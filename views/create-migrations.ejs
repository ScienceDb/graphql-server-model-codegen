'use strict';
const dict = require('../../utils/graphql-sequelize-types');

/**
 * @module - Migrations to create and to undo a table correpondant to a sequelize model.
 */
module.exports = {

  /**
   * up - Creates a table with the fields specified in the the createTable function.
   *
   * @param  {object} queryInterface Used to modify the table in the database.
   * @param  {object} Sequelize      Sequelize instance with data types included
   * @return {promise}                Resolved if the table was created successfully, rejected otherwise.
   */
  up: function(queryInterface, Sequelize){
    return queryInterface.createTable('<%-namePl-%>', {

      <%- idAttribute -%>: {
        type: Sequelize[ dict['<%= idAttributeType %>'] ],
        primaryKey: true<%if(defaultId){-%>,
        autoIncrement: true
        <%}-%>
      },

      createdAt: {
        type: Sequelize.DATE
      },

      updatedAt: {
        type: Sequelize.DATE
      },

      <% let keys = Object.keys(attributes) -%>
      <%for (let i=0; i< keys.length; i++) {-%>
        <% let type_seq =  attributes[ keys[i] ] -%>
        <%=  keys[i] %>: {
            type: Sequelize[ dict['<%= type_seq %>'] ]<%if(externalIds.includes(keys[i])){-%>,
            allowNull: false,
            unique: true
            <%}-%>
        }
        <%if(i !== (keys.length -1) ){ -%>,<%}-%>
      <%}-%>

    })<%if(indices!==undefined){ for(let i=0; i< indices.length; i++){-%>
    .then(()=> {queryInterface.addIndex('<%-namePl-%>', ['<%= indices[i] %>'] )})
      <%}-%>   <%}-%>;
  },

  /**
   * down - Deletes a table.
   *
   * @param  {object} queryInterface Used to modify the table in the database.
   * @param  {object} Sequelize      Sequelize instance with data types included
   * @return {promise}                Resolved if the table was deleted successfully, rejected otherwise.
   */
  down: function(queryInterface, Sequelize){
    return queryInterface.dropTable('<%-namePl-%>');
  }

};
