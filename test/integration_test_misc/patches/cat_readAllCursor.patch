137,139c137,139
<         let options = helper.buildCursorBasedSequelizeOptions(search, order, pagination, this.idAttribute(), cat.definition.attributes);
<         let records = await super.findAll(options);
< 
---
>         let options = helper.buildCursorBasedGenericOptions(search, order, pagination, this.idAttribute());
>         let records = await cat.readAll(options['search'], options['order'], options['pagination'], benignErrorReporter);
>         
142,143d141
<         // validationCheck after read
<         records = await validatorUtil.bulkValidateData('validateAfterRead', this, records, benignErrorReporter);
147,152c145,147
<         if (pagination && (pagination.after || pagination.before)) {
<             let oppOptions = helper.buildOppositeSearchSequelize(search, order, {
<                 ...pagination,
<                 includeCursor: false
<             }, this.idAttribute(), cat.definition.attributes);
<             oppRecords = await super.findAll(oppOptions);
---
>         if (pagination && (pagination.after || pagination.before)) {           
>             let oppOptions = helper.buildOppositeSearchGeneric(search, order, {...pagination, includeCursor: false}, this.idAttribute());
>             oppRecords = await cat.readAll(oppOptions['search'], oppOptions['order'], oppOptions['pagination'], benignErrorReporter);
